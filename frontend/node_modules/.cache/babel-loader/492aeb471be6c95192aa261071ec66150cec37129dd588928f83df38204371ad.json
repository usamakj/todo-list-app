{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mern-Stack-Project\\\\mern-todo-list\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTask] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(API_URL);\n        setTask(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const addTask = async newTask => {\n    try {\n      const response = await axios.post(API_URL, newTask);\n      setTask(prevTasks => [...prevTasks, response.data]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`<span class=\"math-inline\">\\{API\\_URL\\}<span/>{id}`);\n      setTask(prevTasks => prevTasks.filter(task => task._id !== id));\n    } catch (error) {\n      console.error('Error Deleting Task:', error);\n    }\n  };\n  const toggleTask = async id => {\n    try {\n      const taskToToggle = tasks.find(task => task._id === id);\n      const updateTask = {\n        ...taskToToggle,\n        completed: !taskToToggle.completed\n      };\n      await axios.put(`<span class=\"math-inline\">\\{API\\_URL\\}<span/>{id}`, updateTask);\n    } catch (error) {\n      console.error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" MERN To-Do List Frontend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Oalh7gGRly8nmy9ApEFAxF9qmMk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTask","fetchTasks","response","get","API_URL","data","error","console","addTask","newTask","post","prevTasks","deleteTask","id","delete","filter","task","_id","toggleTask","taskToToggle","find","updateTask","completed","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Mern-Stack-Project/mern-todo-list/frontend/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTask] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(API_URL);\n        setTask(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error)\n      }\n    };\n    fetchTasks();\n  }, []\n  )\n\n  const addTask = async (newTask) => {\n    try {\n      const response = await axios.post(API_URL, newTask);\n      setTask((prevTasks) => [...prevTasks, response.data]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`<span class=\"math-inline\">\\{API\\_URL\\}<span/>{id}`);\n      setTask((prevTasks) => prevTasks.filter((task) => task._id !== id));\n    } catch (error) {\n      console.error('Error Deleting Task:', error);\n    }\n  };\n  const toggleTask = async (id) => {\n    try {\n      const taskToToggle = tasks.find((task) => task._id === id);\n      const updateTask = { ...taskToToggle, completed: !taskToToggle.completed }\n       await axios.put(`<span class=\"math-inline\">\\{API\\_URL\\}<span/>{id}`, updateTask);\n    } catch (error) {\n      console.error\n    }\n   \n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1> MERN To-Do List Frontend</h1>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACC,OAAO,CAAC;QACzCJ,OAAO,CAACE,QAAQ,CAACG,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EACH,CAAC;EAED,MAAMO,OAAO,GAAG,MAAOC,OAAO,IAAK;IACjC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAACN,OAAO,EAAEK,OAAO,CAAC;MACnDT,OAAO,CAAEW,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAET,QAAQ,CAACG,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMM,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMnB,KAAK,CAACoB,MAAM,CAAC,mDAAmD,CAAC;MACvEd,OAAO,CAAEW,SAAS,IAAKA,SAAS,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,EAAE,CAAC,CAAC;IACrE,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACD,MAAMY,UAAU,GAAG,MAAOL,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMM,YAAY,GAAGpB,KAAK,CAACqB,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,EAAE,CAAC;MAC1D,MAAMQ,UAAU,GAAG;QAAE,GAAGF,YAAY;QAAEG,SAAS,EAAE,CAACH,YAAY,CAACG;MAAU,CAAC;MACzE,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,mDAAmD,EAAEF,UAAU,CAAC;IACnF,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK;IACf;EAEF,CAAC;EAGD,oBACEV,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB7B,OAAA;MAAA6B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEV;AAAC/B,EAAA,CAnDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}